#Service Catalog sample

description: SSM Automation + Service Catalog Sample
schemaVersion: '0.3'

parameters: 
    "Name":
      "default": "ssmdocument"
      "type": "String"
      "description": "(Optional) CloudFormation StackName."

mainSteps:
- name: deleteStack0
  action: aws:deleteStack
  onFailure: Continue
  inputs:
    StackName: "{{Name}}"

- name: createStack
  action: aws:createStack
  inputs:
    StackName: "{{Name}}"
    Capabilities: [ "CAPABILITY_IAM" ]
    TemplateBody: |
      Description: "SSM Automation and Service Catalog Sample"
      Parameters:
        LatestAmiId:
          Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
          Default: "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
      
      Resources:
        SCProductInstance:
          Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
          Properties:
            ProductName: TestProduct
            ProvisioningArtifactName: Version1
            ProvisionedProductName: ProvisionedInstance_TestProduct

- name: getInstanceId
  action: aws:executeAwsApi
  onFailure: "step:deleteStack"
  inputs:
    Service: ec2
    Api: DescribeInstances
    Filters:  
    - Name: "tag:Name"
      Values: [ "cloudformation-managedinstance" ]
    - Name: "instance-state-name"
      Values: [ "running" ]
  outputs:
  - Name: instancdId
    Selector: "$.Reservations[0].Instances[0].InstanceId"
    Type: "String"

- name: ansibleInstall
  action: aws:runCommand
  onFailure: "step:deleteStack"
  inputs:
    DocumentName: AWS-RunShellScript
    InstanceIds: ["{{getInstanceId.instancdId}}"]
    Parameters:
      commands: 
        - |
          sudo pip install ansible

- name: runCommand
  action: aws:runCommand
  onFailure: "step:deleteStack"
  inputs:
    DocumentName: AWS-RunAnsiblePlaybook
    InstanceIds: ["{{getInstanceId.instancdId}}"]
    Parameters:
      playbook: 
        - |
          - name: Simple example
            hosts: all 
            tasks:
            - name: Create a file called '/tmp/testfile.txt'
              copy: 
                content: "hello world\n"
                dest: /tmp/testfile.txt
                force: yes

            - name: print message
              shell: echo "Hello World!"

- name: deleteStack
  action: aws:deleteStack
  onFailure: Continue
  inputs:
    StackName: "{{Name}}"
